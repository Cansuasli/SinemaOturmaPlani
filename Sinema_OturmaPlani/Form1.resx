<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglKoltuklar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglKoltuklar.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADs
        DQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AwAB/wHyAbwB8QHy
        AfMP9AHzAvAB8gH0Af8CAAH0AfIC8xT0AfMD8QH0PgAB/wEHAfgB9wG8AfMP/wHwAewB7QG8AfMB/wIA
        AfIC7gHwAfMR/wL0AbwC9wHvAfE+AAH/AfMC8AHxAfIB8QG8DAcB8AHuAfcBBwHyAfQB/wIAARoDbwGT
        B/AK8QHwAbwBkwFuAWgBbwEaQAAB/wHyAfABBwHvAZIL7QGSAfcB7wG7AfAB/wQAARoBRgHpAT8BbgH3
        B+8JBwHvAfcBbgFFAekBRgEaQAAB/wEHAewBkQGQDYsCkAH4AQcB9QQAARoBRgHpAT8BRAFtAewF7QqS
        AewDRQJGARpAAAH1Ae8BbBGKAYsB7wH0BAABGgFGAekBPwFEARQBbQT4C+wBbQFEAQECRQFGARpAAAH1
        AbsTrAG7AfUEAAEaAUYC6QEeAUMBEg9tARIBCwEeAT8B6QFGARo+AAH/AfUB8gG0BKwLsgSsAbQB8gH1
        Af8CAAEaAUYC6QEeAQsBEw8SARQBCwEeAT8B6QFGARo+AAH/AQkBswGtA6wB1AvaAdQDrAGtAbMBCQH/
        AgABGgFGAukBHgELARUBFAERAwsHHgELAREBFQFDAQsBHgJFAUYBGj0AAfQB8QG0BKwBsg3aAbIErAG0
        AfAB9AEAARoBRgLpAQEBHgNEAh4JAQNEAR4BAQFFAkYBGj0AAbwBkAGtA6wCsg3ZAtMDrAGtAZABvAEA
        ARoBRgTpEEYBRQTpAUYBGj0AAQkBigKsBrII2QG4ArIC0wGyBKwBCQEAARoBFwFGAukGRgNpAUYDaQZG
        AukBRgFvARo9AAEJA6wB1AHaArIBigGsCbICigGyAdkCswOsAQkBAAG9ARYBFwdGAm8BjgNvAY4CbwdG
        AW8BGgHzPQAB8wEJAbQBsgLbAdoEsge4AbIBrAGKAbgB2gHbAbkBsgG0AQkB8wEAAfQBvQGUBG8CRgVp
        AUYFaQFGBG8BkwEaAfMB9D4AAf8BCQGzAtwB2gHZArIJ2QKyAtoB4QHbAbIBCQH/AwAB/wEbARoClARv
        AmkFRgJpAm8CFgGTAe4B9QH0Af8/AAH/AfMBCQG7AboBuQKyAdME2QG4BNkB0wGyAbMBuQGzAboBCQHz
        Af8DAAH/AfQC8wEbBRoBkwFGA+kBRgGTBBoBGwHyAfMC9AH/QQAB9QEJA7MC0wLZAdMDsgHTAtkC0wKz
        Aa0BCQH1CwAE/wEaAUYD6QFFARoI/0MAAf8B9AEJAbQBsgLTB7ID0wGzAboBCQHdAfMB/wsAAfUB8gHu
        AZMBbwFGBEABbwGTAfEB9AL/AvQB/0UAAfQBtAGsAbIB0wiyAdMBsgGzAQkB8wH0CwAC/wHyAZMBbwE/
        AUACRgRAAUYBkwHxAfMD9AH/RQAB9AG0AawMsgGzAbsB8gH0CwAB9QEHAW8BaQFGAkACRgJAAUYCQAFp
        AW8BjgEHAfMC/0UAAfQBtAGsDLIBswG7AfAB9AsAAfQBbwHpA0ADRgFAAkYEQAE/AY0B9EcAAfQBtASs
        B7ICrAGtAbQBCQH0CwAB9AGOAUAJRgJAAkYB6QFuAfRHAAH0AbQFrAWyBKwBswG7AfQLAAH0AY4BQAlG
        AkACRgEfAW8B9EcAAfQBtA6sAbMBuwH0CwAB9AGOAekIRgFABEYBHwFvAfRHAAH0AbQOrAGtAboB9AsA
        AfQBjgFFCEYBQAVGAZMB9EcAAfQBtA+sAbQB9AsAAfQBkwFFBEYBQAZGAUABaQGTAfMB9EcAAfUB3QG6
        ArMKrAGzAbQB3QH1CwAB/wEaAZMBbwFpAkYBQAZGAWkBkwHxAfQB/0cAAv8B8wHcAdoCswSsAbICrAHU
        AdsB8wL/CwAC/wH0AQcBjgJpB0YBkwHxAfQC/0kAAfUB8wEZCgkBGQH1DwAB/wHzAfABvAgaAfIB9AH/
        uwABQgFNAT4HAAE+AwABKAMAAXgDAAEeAwABAQEAAQEFAAHgAQEWAAP/AQABwAIAAQYMAAHAAgABBgwA
        AcACAAEGDAAB8AIAAR4MAAHwAgABHgwAAfACAAEeDAAB8AIAAR4MAAHAAgABBgwAAcACAAEGDAABgAIA
        AQIMAAGAAgABAgwAAYACAAECDAABgAIAAQIMAAGAAgABAgwAAcACAAEHAwABEAgAAcACAAEHAwABEAgA
        AfACAAEfAfwCAAFwCAAB8AIAAR8B/AIAAXAIAAH8AgABfwHwAgABcAgAAfwCAAF/AfACAAFwCAAB/AIA
        AX8B8AEAAQEB8AgAAfwCAAF/AfABAAEBAfAIAAH8AgABfwHwAQABAQHwCAAB/AIAAX8B8AEAAQEB8AgA
        AfwCAAF/AfABAAEBAfAIAAH8AgABfwHwAQABAQHwCAAB/AIAAX8B8AEAAQEB8AgAAfwCAAF/AfABAAEB
        AfAIAAH/AQABAQH/AfwBAAEHAfAIAAf/AfAIAAs=
</value>
  </data>
</root>